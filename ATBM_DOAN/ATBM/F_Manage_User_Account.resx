<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>